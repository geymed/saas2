type salesforce.NamedCredential {
  annotations {
    serviceid metadataType {
    }
  }
  boolean allowMergeFieldsInBody {
    _required = false
  }
  boolean allowMergeFieldsInHeader {
    _required = false
  }
  string authProvider {
    _required = false
  }
  string authTokenEndpointUrl {
    _required = false
  }
  string awsAccessKey {
    _required = false
  }
  string awsAccessSecret {
    _required = false
  }
  string awsRegion {
    _required = false
  }
  string awsService {
    _required = false
  }
  string certificate {
    _required = false
  }
  string endpoint {
    _required = false
  }
  serviceid fullName {
    _required = false
  }
  boolean generateAuthorizationHeader {
    _required = false
  }
  string jwtAudience {
    _required = false
  }
  string jwtFormulaSubject {
    _required = false
  }
  string jwtIssuer {
    _required = false
  }
  string jwtSigningCertificate {
    _required = false
  }
  string jwtTextSubject {
    _required = false
  }
  number jwtValidityPeriodSeconds {
    _required = false
  }
  string label {
    _required = false
  }
  string oauthRefreshToken {
    _required = false
  }
  string oauthScope {
    _required = false
  }
  string oauthToken {
    _required = false
  }
  string password {
    _required = false
  }
  string principalType {
    _required = false
    _restriction = {
        enforce_value = false
        values = [
            "Anonymous",
            "NamedUser",
            "PerUser",
            "UserWithImpersonation",
        ]
    }
  }
  string privateConnection {
    _required = false
  }
  string protocol {
    _required = false
    _restriction = {
        enforce_value = false
        values = [
            "ApiKey",
            "AwsSv4",
            "C2c",
            "Certificate",
            "Jwt",
            "JwtExchange",
            "NTLM",
            "NoAuthentication",
            "Oauth",
            "Password",
        ]
    }
  }
  string username {
    _required = false
  }
  metadataType = "NamedCredential"
}
